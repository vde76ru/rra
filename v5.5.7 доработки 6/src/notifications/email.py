# =================================================================
# –§–∞–π–ª: src/notifications/email.py
# =================================================================
"""
Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –±–æ—Ç–∞
"""
import smtplib
from email.mime.text import MimeText
from email.mime.multipart import MimeMultipart
from typing import List, Optional
import logging

logger = logging.getLogger(__name__)

class EmailNotifier:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ email"""
    
    def __init__(self, smtp_server: str = "smtp.gmail.com", 
                 smtp_port: int = 587):
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.username = None
        self.password = None
        
    def configure(self, username: str, password: str):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        self.username = username
        self.password = password
    
    async def send_trade_notification(self, trade_data: dict):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–¥–µ–ª–∫–µ"""
        try:
            subject = f"üöÄ –ù–æ–≤–∞—è —Å–¥–µ–ª–∫–∞: {trade_data.get('symbol')} {trade_data.get('side')}"
            body = f"""
            –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –Ω–æ–≤–∞—è —Å–¥–µ–ª–∫–∞:
            
            –°–∏–º–≤–æ–ª: {trade_data.get('symbol')}
            –°—Ç–æ—Ä–æ–Ω–∞: {trade_data.get('side')}
            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {trade_data.get('quantity')}
            –¶–µ–Ω–∞: {trade_data.get('price')}
            –°—Ç—Ä–∞—Ç–µ–≥–∏—è: {trade_data.get('strategy')}
            –í—Ä–µ–º—è: {trade_data.get('timestamp')}
            """
            
            return await self.send_email(subject, body)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–¥–µ–ª–∫–µ: {e}")
            return False
    
    async def send_email(self, subject: str, body: str, 
                        recipients: Optional[List[str]] = None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ email"""
        if not self.username or not self.password:
            logger.warning("Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
            
        try:
            # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
            logger.info(f"üìß Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {subject}")
            return True
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
            return False