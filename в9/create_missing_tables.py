#!/usr/bin/env python3
# create_missing_tables.py - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü

import os
import sys
import pymysql
from dotenv import load_dotenv

load_dotenv()

DB_HOST = os.getenv('DB_HOST', 'localhost')
DB_NAME = os.getenv('DB_NAME', 'crypto_top_bd_mysql')
DB_USER = os.getenv('DB_USER', 'crypto_top_admin')
DB_PASSWORD = os.getenv('DB_PASSWORD', 'LSM6_PqnuZ10nvEdzfe6')

print("üî® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")

try:
    connection = pymysql.connect(
        host=DB_HOST,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME,
        charset='utf8mb4'
    )
    
    cursor = connection.cursor()
    
    # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(50) UNIQUE NOT NULL,
        hashed_password VARCHAR(128) NOT NULL,
        is_active BOOLEAN DEFAULT TRUE,
        is_blocked BOOLEAN DEFAULT FALSE,
        failed_login_attempts INT DEFAULT 0,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        last_login TIMESTAMP NULL,
        blocked_at TIMESTAMP NULL,
        INDEX idx_username (username)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
    """)
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞")
    
    # –¢–∞–±–ª–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS bot_settings (
        id INT AUTO_INCREMENT PRIMARY KEY,
        `key` VARCHAR(50) UNIQUE NOT NULL,
        value TEXT,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        INDEX idx_key (`key`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
    """)
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ bot_settings —Å–æ–∑–¥–∞–Ω–∞")
    
    # –¢–∞–±–ª–∏—Ü–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
    cursor.execute("""
    CREATE TABLE IF NOT EXISTS trading_pairs (
        id INT AUTO_INCREMENT PRIMARY KEY,
        symbol VARCHAR(20) UNIQUE NOT NULL,
        is_active BOOLEAN DEFAULT TRUE,
        min_position_size FLOAT,
        max_position_size FLOAT,
        strategy VARCHAR(50),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        INDEX idx_symbol (symbol)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
    """)
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ trading_pairs —Å–æ–∑–¥–∞–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
    cursor.execute("""
        SELECT COLUMN_NAME 
        FROM INFORMATION_SCHEMA.COLUMNS 
        WHERE TABLE_SCHEMA = %s 
        AND TABLE_NAME = 'trades'
    """, (DB_NAME,))
    
    existing_columns = [row[0] for row in cursor.fetchall()]
    
    # –î–æ–±–∞–≤–ª—è–µ–º stop_loss –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if 'stop_loss' not in existing_columns:
        cursor.execute("ALTER TABLE trades ADD COLUMN stop_loss FLOAT")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ stop_loss")
    
    # –î–æ–±–∞–≤–ª—è–µ–º take_profit –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if 'take_profit' not in existing_columns:
        cursor.execute("ALTER TABLE trades ADD COLUMN take_profit FLOAT")
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ take_profit")
    
    connection.commit()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("SHOW TABLES")
    tables = cursor.fetchall()
    print(f"\nüìä –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü –≤ –ë–î: {len(tables)}")
    for table in tables:
        print(f"   - {table[0]}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã
    print("\nüìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä...")
    pairs = ['BTCUSDT', 'ETHUSDT', 'BNBUSDT', 'SOLUSDT']
    for pair in pairs:
        cursor.execute("""
            INSERT IGNORE INTO trading_pairs (symbol, is_active, strategy) 
            VALUES (%s, TRUE, 'multi_indicator')
        """, (pair,))
    connection.commit()
    print("‚úÖ –¢–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
    
    connection.close()
    print("\n‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    sys.exit(1)