#!/usr/bin/env python3
# test_installation.py - –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –≤—Å—ë —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ

import sys
import os
from dotenv import load_dotenv

print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Crypto Trading Bot")
print("=" * 50)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

errors = []
warnings = []

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤...")
try:
    import fastapi
    print("   ‚úÖ FastAPI")
except ImportError:
    errors.append("FastAPI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

try:
    import ccxt
    print("   ‚úÖ CCXT")
except ImportError:
    errors.append("CCXT –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

try:
    import pandas
    print("   ‚úÖ Pandas")
except ImportError:
    errors.append("Pandas –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

try:
    import redis
    print("   ‚úÖ Redis")
except ImportError:
    errors.append("Redis –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

try:
    import pymysql
    print("   ‚úÖ PyMySQL")
except ImportError:
    errors.append("PyMySQL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
print("\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
required_dirs = ['src', 'src/core', 'src/exchange', 'src/strategies', 'logs', 'data']
for dir_path in required_dirs:
    if os.path.exists(dir_path):
        print(f"   ‚úÖ {dir_path}")
    else:
        errors.append(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {dir_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
if os.path.exists('.env'):
    print("   ‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    required_vars = ['DB_HOST', 'DB_NAME', 'DB_USER', 'DB_PASSWORD', 'BYBIT_TESTNET']
    for var in required_vars:
        if os.getenv(var):
            print(f"   ‚úÖ {var} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            warnings.append(f"{var} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π
    if not os.getenv('BYBIT_API_KEY') or os.getenv('BYBIT_API_KEY') == 'your_testnet_api_key_here':
        warnings.append("BYBIT_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á–∏ –Ω–∞ https://testnet.bybit.com")
else:
    errors.append("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...")
try:
    import pymysql
    connection = pymysql.connect(
        host=os.getenv('DB_HOST', 'localhost'),
        user=os.getenv('DB_USER'),
        password=os.getenv('DB_PASSWORD'),
        database=os.getenv('DB_NAME')
    )
    connection.close()
    print("   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    errors.append(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis
print("\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis...")
try:
    import redis
    r = redis.Redis(host='localhost', port=6379, decode_responses=True)
    r.ping()
    print("   ‚úÖ Redis —Ä–∞–±–æ—Ç–∞–µ—Ç")
except Exception as e:
    warnings.append(f"Redis –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –ª–æ–≥–æ–≤
print("\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å...")
try:
    test_file = 'logs/test.tmp'
    with open(test_file, 'w') as f:
        f.write('test')
    os.remove(test_file)
    print("   ‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ logs –µ—Å—Ç—å")
except Exception as e:
    errors.append(f"–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ logs: {e}")

# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
print("\n" + "=" * 50)
print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
print("=" * 50)

if not errors and not warnings:
    print("\n‚úÖ –í—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É.")
    print("\nüöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –î–æ–±–∞–≤—å—Ç–µ API –∫–ª—é—á–∏ Bybit –≤ .env —Ñ–∞–π–ª")
    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
    print("3. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://systemetech.ru:8001")
else:
    if errors:
        print(f"\n‚ùå –ù–∞–π–¥–µ–Ω–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫: {len(errors)}")
        for error in errors:
            print(f"   ‚Ä¢ {error}")
    
    if warnings:
        print(f"\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {len(warnings)}")
        for warning in warnings:
            print(f"   ‚Ä¢ {warning}")
    
    print("\n‚ùó –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞!")

print("\n" + "=" * 50)